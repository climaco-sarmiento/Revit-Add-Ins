{
  "Uuid": "32397ba8-1f57-4cc4-bb2b-f32d82742958",
  "IsCustomNode": false,
  "Description": "",
  "Name": "auto-column-placement",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 75,
      "SelectedString": "Columns_Rectangular:600x600mm",
      "Id": "6bff619f36b941deb5de9a14d7444395",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "551bfe9cc83c4ff88949c9ac8bad3364",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0637db6af0364ba79a9f3814eaf0cfc3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9f391067d3ee4eef8edd81011d11a4da",
          "Name": "familyType",
          "Description": "Family Type. Also called Family Symbol.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "173cd5c6fb5148898a64ddd0d52e4622",
          "Name": "point",
          "Description": "Point in meters.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6926c8625c2421d99a6c6ba6d71c8f8",
          "Name": "level",
          "Description": "Level to host Family Instance.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c25c2587ac124d209d94b243d897fa16",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Replication": "Auto",
      "Description": "Place a Revit FamilyInstance given the FamilyType (also known as the FamilySymbol in the Revit API), it's coordinates in world space, and the Level\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "Level 0",
      "Id": "7f78cdbe607f4aebb736d666bd4e4ebe",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2c1f917ad6d4a4ab402326fe7847ff4",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 269,
      "SelectedString": "OST_Grids",
      "Id": "e7e70ac0f91448c0933933783b038f62",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "208b83ad76a4413c9ef38dda784c4dfe",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "6be59e2b015042a380d5b347e9966edb",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9cc72506b5554f3ab4dfa9b692a196a5",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43015825a2554bf18c35a601661a24c6",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8044de6d523341e4a68d2fb4a9b8abcf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c57cf7b0540a47e5b537d00cd34e17bd",
          "Name": "grid",
          "Description": "Revit.Elements.Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "844c5941ed1542b0b5a3c8e898a7b2a3",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Grid.Curve",
      "Replication": "Auto",
      "Description": "Get the underlying Curve geometry from this Element\n\nGrid.Curve: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3242968a343348cabe00baacdeacc7ba",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa475d6d5f634854aa3c1062d9330cab",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eaa75e3ba0424ccf951bd75097640a3f",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1983b69aa63d434191ef9dfc2802ab6b",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "CrossProduct",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c205a870b5b04e3096945442188146ca",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9a365c9feecd4f73844738bb9287de5e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d609f1f62d44d66af1b88aaaefccac2",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1eca4d38989e48c78298e910e4040068",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37e75c4f472744bd8ea800389e703989",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "3567458419df4d29a0a4c0cdd6094e22",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "39c2f7d6f5f0490997260261e55dabca",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "665bc56e69614a6f8e26a839103ca790",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fd4bcb9087ad499c8190356ce51410d8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e947c51821f4406f8b096534b7ef87b0",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44fe8059f1db41f3a9e9e04f8ffd7850",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4128b69733140709660f04cb4179344",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c952f9b983d743908179cd56cc66d212",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fcc923e0b98463994e425efa09b8218",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Point\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "358e151746c4457c9d3f951c6e263806",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6ac58ddb922043a1beb5e57bb13c2c90",
          "Name": "string",
          "Description": "String to take substring of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0f02ba1f149458b8c8adea09e124408",
          "Name": "startIndex",
          "Description": "Starting character position of the substring in the original string\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "685b2d549a3e4c4985e9051f3535d5e6",
          "Name": "length",
          "Description": "Number of characters in the substring\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6e5cd41220145538e14fa712574f278",
          "Name": "string",
          "Description": "Substring made from the original string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Substring@string,int,int",
      "Replication": "Auto",
      "Description": "Retrieves a substring from the given string. The substring starts at the given character position and has the given length.\n\nString.Substring (string: string, startIndex: int, length: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "72f4e235c21046bda02fbb109cf3d55a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "15fa2566ace243adaaf5783f2401e123",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4208854ad273425996bb92105029645d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;\n5;"
    }
  ],
  "Connectors": [
    {
      "Start": "551bfe9cc83c4ff88949c9ac8bad3364",
      "End": "9f391067d3ee4eef8edd81011d11a4da",
      "Id": "401fa9e43f794478a1e36364b98084c9",
      "IsHidden": "False"
    },
    {
      "Start": "c2c1f917ad6d4a4ab402326fe7847ff4",
      "End": "c6926c8625c2421d99a6c6ba6d71c8f8",
      "Id": "0438c6212d314929b4a40273157b7433",
      "IsHidden": "False"
    },
    {
      "Start": "208b83ad76a4413c9ef38dda784c4dfe",
      "End": "9cc72506b5554f3ab4dfa9b692a196a5",
      "Id": "1ffb1309bb7a403497ca6e306ec38e45",
      "IsHidden": "False"
    },
    {
      "Start": "43015825a2554bf18c35a601661a24c6",
      "End": "c57cf7b0540a47e5b537d00cd34e17bd",
      "Id": "22d1f95cd9074d80ad264fef07e50d2c",
      "IsHidden": "False"
    },
    {
      "Start": "844c5941ed1542b0b5a3c8e898a7b2a3",
      "End": "fa475d6d5f634854aa3c1062d9330cab",
      "Id": "231625e6ae1f443fb8b04903b8ac5468",
      "IsHidden": "False"
    },
    {
      "Start": "844c5941ed1542b0b5a3c8e898a7b2a3",
      "End": "eaa75e3ba0424ccf951bd75097640a3f",
      "Id": "6882ed5f748745e8a0b081d9c46dd899",
      "IsHidden": "False"
    },
    {
      "Start": "1983b69aa63d434191ef9dfc2802ab6b",
      "End": "9a365c9feecd4f73844738bb9287de5e",
      "Id": "7adaf2d83ad445db8eab1f6c76046f36",
      "IsHidden": "False"
    },
    {
      "Start": "1983b69aa63d434191ef9dfc2802ab6b",
      "End": "39c2f7d6f5f0490997260261e55dabca",
      "Id": "27de196bfcb44154a48b7e93044e81b8",
      "IsHidden": "False"
    },
    {
      "Start": "1eca4d38989e48c78298e910e4040068",
      "End": "173cd5c6fb5148898a64ddd0d52e4622",
      "Id": "8a3dcf2a87744ddd8df55ca3b2b202ff",
      "IsHidden": "False"
    },
    {
      "Start": "665bc56e69614a6f8e26a839103ca790",
      "End": "6ac58ddb922043a1beb5e57bb13c2c90",
      "Id": "3341ccf0fffd4948b38ef123d08202ac",
      "IsHidden": "False"
    },
    {
      "Start": "d4128b69733140709660f04cb4179344",
      "End": "1d609f1f62d44d66af1b88aaaefccac2",
      "Id": "25476fb9b7e44c24830d00d446b8d924",
      "IsHidden": "False"
    },
    {
      "Start": "2fcc923e0b98463994e425efa09b8218",
      "End": "e947c51821f4406f8b096534b7ef87b0",
      "Id": "68549cd7eb124975b36d2dfc6ecfb721",
      "IsHidden": "False"
    },
    {
      "Start": "d6e5cd41220145538e14fa712574f278",
      "End": "44fe8059f1db41f3a9e9e04f8ffd7850",
      "Id": "3a82aba874994d0f93e5141bc389e7ee",
      "IsHidden": "False"
    },
    {
      "Start": "15fa2566ace243adaaf5783f2401e123",
      "End": "d0f02ba1f149458b8c8adea09e124408",
      "Id": "e7517eece365491a9fdf6ee93fe400a8",
      "IsHidden": "False"
    },
    {
      "Start": "4208854ad273425996bb92105029645d",
      "End": "685b2d549a3e4c4985e9051f3535d5e6",
      "Id": "354ff2ce80ce4997b880cfc12fcf8cac",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.18",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "0637db6a-f036-4ba7-9a9f-3814eaf0cfc3",
      "Binding": {
        "ByPointAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_0637db6a-f036-4ba7-9a9f-3814eaf0cfc3": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.1.5096",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -6328.5763010954879,
      "EyeY": 19054.061576963504,
      "EyeZ": 14340.095086448182,
      "LookX": 1948.8101878142377,
      "LookY": -21834.138139463503,
      "LookZ": -8250.871697776307,
      "UpX": 0.19146299362182617,
      "UpY": 0.553391695022583,
      "UpZ": -0.81061685085296631
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "6bff619f36b941deb5de9a14d7444395",
        "Name": "Family Types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 69.197118746970659,
        "Y": -3.3988179780419756
      },
      {
        "Id": "0637db6af0364ba79a9f3814eaf0cfc3",
        "Name": "FamilyInstance.ByPointAndLevel",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 328.18617294125494,
        "Y": 279.46572225821933
      },
      {
        "Id": "7f78cdbe607f4aebb736d666bd4e4ebe",
        "Name": "Levels",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 253.30195929603059,
        "Y": 553.95412841597033
      },
      {
        "Id": "e7e70ac0f91448c0933933783b038f62",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -566.98987013717158,
        "Y": 51.309320861429626
      },
      {
        "Id": "6be59e2b015042a380d5b347e9966edb",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -327.37974681196107,
        "Y": 185.12457306182205
      },
      {
        "Id": "8044de6d523341e4a68d2fb4a9b8abcf",
        "Name": "Grid.Curve",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -289.1493630112094,
        "Y": 376.85638938847126
      },
      {
        "Id": "3242968a343348cabe00baacdeacc7ba",
        "Name": "Geometry.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -500.38837401481271,
        "Y": 529.63932187535374
      },
      {
        "Id": "c205a870b5b04e3096945442188146ca",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23.059238157637878,
        "Y": 354.27108632519287
      },
      {
        "Id": "3567458419df4d29a0a4c0cdd6094e22",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -216.45192786953066,
        "Y": 684.21665024868162
      },
      {
        "Id": "fd4bcb9087ad499c8190356ce51410d8",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 102.9101887300551,
        "Y": 707.02823000579508
      },
      {
        "Id": "c952f9b983d743908179cd56cc66d212",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -0.50147238861882215,
        "Y": 555.21066461531291
      },
      {
        "Id": "358e151746c4457c9d3f951c6e263806",
        "Name": "String.Substring",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -155.6210485172287,
        "Y": 846.93925251608948
      },
      {
        "Id": "72f4e235c21046bda02fbb109cf3d55a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -404.16323109322286,
        "Y": 890.27150817811707
      }
    ],
    "Annotations": [],
    "X": 324.26423746581696,
    "Y": 44.868776892846,
    "Zoom": 0.52604861775336131
  }
}